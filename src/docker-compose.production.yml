version: '3.8'

services:
  dms.cache:
    image: redis:7.0.15-alpine
    container_name: dms.cache
    restart: always
    ports:
      - "6379:6379"

  dms.db:
    image: postgres:alpine3.16
    container_name: dms.db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin@123
      - POSTGRES_DB=DMSPortalDB
    restart: always
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgressql/data

  dms.seq:
    image: datalust/seq:latest
    container_name: dms.seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:5341"
      - "8081:80"
    volumes:
      - seq_data:/data
  
  dms.hangfire:
    image: mongo
    container_name: dms.hangfire
    ports:
      - "27018:27017"
    volumes:
      - hangfire_mongo_data:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "admin"

  # api sections
  dms.api:
    image: ${DOCKER_REGISTRY-}dms-api:${PLATFORM:-windows}-${TAG:-latest}
    container_name: dms.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - "ConnectionStrings:DefaultConnectionString=Server=dms.db;Port=5432;Database=DMSPortalDB;User Id=admin;Password=admin@123"
      - "ConnectionStrings:CacheConnectionString=dms.cache:6379"
      - "SeqConfiguration:ServerUrl=http://dms.seq:5341"
      - "HangfireSettings:Storage:ConnectionString=mongodb://admin:admin@dms.hangfire:27017/hangfire-webapi?authSource=admin"
    depends_on:
      - dms.db
      - dms.cache
      - dms.seq
    ports:
      - "8002:80"
    build:
      context: .
      dockerfile: Dockerfile
    restart: always

# network section
networks:
  default:
    name: prod-dms
    driver: bridge

# volumes section
volumes:
  postgres_data:
    name: postgres_data
  seq_data:
    name: seq_data
  pgadmin_data:
    name: pgadmin_data
  hangfire_mongo_data:
    name: hangfire_mongo_data